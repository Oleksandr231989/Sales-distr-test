name: Deploy to GitHub Pages
on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
# Add permissions for the GITHUB_TOKEN
permissions:
  contents: write  # Allows writing to the repository (needed for pushing to gh-pages)
  pages: write     # Allows deploying to GitHub Pages
  id-token: write  # Allows the token to be used for authentication
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3
      
      # Set up Node.js (optional, but useful for build steps)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      # Generate config.js with secrets
      - name: Generate config.js
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          POWER_BI_URL: ${{ secrets.POWER_BI_URL }}
        run: |
          cat > config.js << EOL
          const config = {
            powerBiUrl: '${POWER_BI_URL}',
            firebase: {
              apiKey: '${FIREBASE_API_KEY}',
              authDomain: '${FIREBASE_AUTH_DOMAIN}',
              projectId: '${FIREBASE_PROJECT_ID}',
              storageBucket: '${FIREBASE_STORAGE_BUCKET}',
              messagingSenderId: '${FIREBASE_MESSAGING_SENDER_ID}',
              appId: '${FIREBASE_APP_ID}'
            }
          };
          EOL
      
      # Debug: List files to ensure config.js is generated
      - name: List files
        run: ls -la
      
      # Verify config.js contains values (safely)
      - name: Verify config.js (safely)
        run: |
          echo "Checking if config.js was generated correctly..."
          grep -q "const config = {" config.js && echo "✓ config.js structure looks good"
          grep -q "apiKey:" config.js && echo "✓ apiKey property exists"
          grep -q "authDomain:" config.js && echo "✓ authDomain property exists"
      
      # Check Git status and configuration
      - name: Check Git status
        run: |
          git status
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          force_orphan: true  # Ensures a clean gh-pages branch by overwriting history
          commit_message: "Deploy to GitHub Pages [skip ci]"
