name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm init -y
          npm install dotenv

      - name: Set environment variables
        run: |
          # Debugging output to see if variables are set
          if [ ! -z "${{ secrets.POWER_BI_URL }}" ]; then 
            echo "POWER_BI_URL secret is set"
          elif [ ! -z "${{ secrets.POWERBI_URL }}" ]; then
            echo "POWERBI_URL secret is set"
          else
            echo "Warning: Neither POWER_BI_URL nor POWERBI_URL secrets are set"
          fi
          
          if [ ! -z "${{ secrets.FIREBASE_API_KEY }}" ]; then 
            echo "FIREBASE_API_KEY secret is set"
          else
            echo "Warning: FIREBASE_API_KEY secret is not set"
          fi

      - name: Create and Run Build Script
        run: |
          cat > build.js << 'EOL'
          const fs = require('fs');
          const path = require('path');
          
          // –°—Ç–≤–æ—Ä—é—î–º–æ dist –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
          if (!fs.existsSync('dist')) {
              fs.mkdirSync('dist');
          }
          
          // –ó—á–∏—Ç—É—î–º–æ –≤–º—ñ—Å—Ç HTML-—Ñ–∞–π–ª—É
          let indexContent = fs.readFileSync('index.html', 'utf8');
          
          // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
          const runtimeConfig = {
              powerBiUrl: process.env.POWER_BI_URL || process.env.POWERBI_URL || "PLACEHOLDER_POWERBI_URL",
              firebase: {
                  apiKey: process.env.FIREBASE_API_KEY || "PLACEHOLDER_API_KEY",
                  authDomain: process.env.FIREBASE_AUTH_DOMAIN || "PLACEHOLDER_AUTH_DOMAIN",
                  projectId: process.env.FIREBASE_PROJECT_ID || "PLACEHOLDER_PROJECT_ID",
                  storageBucket: process.env.FIREBASE_STORAGE_BUCKET || "PLACEHOLDER_STORAGE_BUCKET",
                  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || "PLACEHOLDER_MESSAGING_SENDER_ID",
                  appId: process.env.FIREBASE_APP_ID || "PLACEHOLDER_APP_ID"
              }
          };
          
          // –î–æ–¥–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          console.log("Power BI URL from env:", process.env.POWER_BI_URL || process.env.POWERBI_URL || "Not set");
          console.log("Firebase API Key from env:", process.env.FIREBASE_API_KEY || "Not set");
          
          // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–ª–∞–π–Ω –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑ —á—ñ—Ç–∫–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏
          const configObj = {
              powerBiUrl: process.env.POWER_BI_URL || process.env.POWERBI_URL || "PLACEHOLDER_POWERBI_URL",
              firebase: {
                  apiKey: process.env.FIREBASE_API_KEY || "PLACEHOLDER_API_KEY",
                  authDomain: process.env.FIREBASE_AUTH_DOMAIN || "PLACEHOLDER_AUTH_DOMAIN",
                  projectId: process.env.FIREBASE_PROJECT_ID || "PLACEHOLDER_PROJECT_ID",
                  storageBucket: process.env.FIREBASE_STORAGE_BUCKET || "PLACEHOLDER_STORAGE_BUCKET",
                  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || "PLACEHOLDER_MESSAGING_SENDER_ID",
                  appId: process.env.FIREBASE_APP_ID || "PLACEHOLDER_APP_ID"
              }
          };
          
          const inlineConfigScript = `<script>
          // Inline configuration injected during build
          const config = ${JSON.stringify(configObj, null, 2)};
          console.log("Config loaded:", config);
          </script>`;
          
          // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–µ–≥
          if (indexContent.includes('<script src="config.js"></script>')) {
              indexContent = indexContent.replace('<script src="config.js"></script>', inlineConfigScript);
              console.log("Config script tag replaced successfully");
          } 
          // –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω—à—ñ –º–æ–∂–ª–∏–≤—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏
          else if (indexContent.includes("<script src='config.js'></script>")) {
              indexContent = indexContent.replace("<script src='config.js'></script>", inlineConfigScript);
              console.log("Config script tag with single quotes replaced");
          }
          else if (indexContent.includes('<script src="./config.js"></script>')) {
              indexContent = indexContent.replace('<script src="./config.js"></script>', inlineConfigScript);
              console.log("Config script tag with ./ replaced");
          }
          // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏, –¥–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä–∏—Ç—Ç—è–º head
          else {
              indexContent = indexContent.replace('</head>', inlineConfigScript + '\n</head>');
              console.log("Config script added before </head> as fallback");
          }
          
          // –ó–∞–ø–∏—Å—É—î–º–æ –∑–º—ñ–Ω–µ–Ω–∏–π HTML —É –ø–∞–ø–∫—É dist
          fs.writeFileSync(path.join('dist', 'index.html'), indexContent);
          console.log("HTML file saved with injected config");
          
          // –ö–æ–ø—ñ—é—î–º–æ —ñ–Ω—à—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ñ–∞–π–ª–∏
          const filesToCopy = [
            'icon.png', 
            'background.png', 
            'mayoly icon.png'
          ];
          
          for (const file of filesToCopy) {
            try {
              if (fs.existsSync(file)) {
                fs.copyFileSync(file, path.join('dist', file));
                console.log(`Copied: ${file}`);
              } else {
                console.log(`File not found, skipping: ${file}`);
              }
            } catch (err) {
              console.error(`Error copying ${file}:`, err);
            }
          }
          
          // –ö–æ–ø—ñ—é—î–º–æ CNAME —Ñ–∞–π–ª
          if (fs.existsSync('CNAME.txt')) {
            fs.writeFileSync(path.join('dist', 'CNAME'), fs.readFileSync('CNAME.txt', 'utf8'));
            console.log("CNAME copied from CNAME.txt");
          } else if (fs.existsSync('CNAME')) {
            fs.copyFileSync('CNAME', path.join('dist', 'CNAME'));
            console.log("CNAME file copied");
          }
          
          console.log("Build completed!");
          EOL
          
          # –í–∏–∫–æ–Ω—É—î–º–æ —Å–∫—Ä–∏–ø—Ç –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –≤—Å—ñ—Ö –ª–æ–≥—ñ–≤
          node build.js
        env:
          POWER_BI_URL: ${{ secrets.POWER_BI_URL }}
          POWERBI_URL: ${{ secrets.POWERBI_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

      - name: Deploy üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
